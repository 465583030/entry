// Code generated by go-swagger; DO NOT EDIT.

package sessions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/laincloud/entry/server/gen/models"
)

// GetSessionOKCode is the HTTP code returned for type GetSessionOK
const GetSessionOKCode int = 200

/*GetSessionOK list the sessions

swagger:response getSessionOK
*/
type GetSessionOK struct {

	/*
	  In: Body
	*/
	Payload *models.Session `json:"body,omitempty"`
}

// NewGetSessionOK creates GetSessionOK with default headers values
func NewGetSessionOK() *GetSessionOK {

	return &GetSessionOK{}
}

// WithPayload adds the payload to the get session o k response
func (o *GetSessionOK) WithPayload(payload *models.Session) *GetSessionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get session o k response
func (o *GetSessionOK) SetPayload(payload *models.Session) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSessionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetSessionDefault generic error response

swagger:response getSessionDefault
*/
type GetSessionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetSessionDefault creates GetSessionDefault with default headers values
func NewGetSessionDefault(code int) *GetSessionDefault {
	if code <= 0 {
		code = 500
	}

	return &GetSessionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get session default response
func (o *GetSessionDefault) WithStatusCode(code int) *GetSessionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get session default response
func (o *GetSessionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get session default response
func (o *GetSessionDefault) WithPayload(payload *models.Error) *GetSessionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get session default response
func (o *GetSessionDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetSessionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
