// Code generated by go-swagger; DO NOT EDIT.

package commands

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/laincloud/entry/server/gen/models"
)

// ListCommandsOKCode is the HTTP code returned for type ListCommandsOK
const ListCommandsOKCode int = 200

/*ListCommandsOK list the commands

swagger:response listCommandsOK
*/
type ListCommandsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Command `json:"body,omitempty"`
}

// NewListCommandsOK creates ListCommandsOK with default headers values
func NewListCommandsOK() *ListCommandsOK {

	return &ListCommandsOK{}
}

// WithPayload adds the payload to the list commands o k response
func (o *ListCommandsOK) WithPayload(payload []*models.Command) *ListCommandsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list commands o k response
func (o *ListCommandsOK) SetPayload(payload []*models.Command) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCommandsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.Command, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*ListCommandsDefault generic error response

swagger:response listCommandsDefault
*/
type ListCommandsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewListCommandsDefault creates ListCommandsDefault with default headers values
func NewListCommandsDefault(code int) *ListCommandsDefault {
	if code <= 0 {
		code = 500
	}

	return &ListCommandsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the list commands default response
func (o *ListCommandsDefault) WithStatusCode(code int) *ListCommandsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the list commands default response
func (o *ListCommandsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the list commands default response
func (o *ListCommandsDefault) WithPayload(payload *models.Error) *ListCommandsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list commands default response
func (o *ListCommandsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListCommandsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
