// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/vnd.laincloud.entry.v1+json"
  ],
  "produces": [
    "application/vnd.laincloud.entry.v1+json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Entry",
    "version": "3.0.0"
  },
  "paths": {
    "/attach": {
      "get": {
        "tags": [
          "container"
        ],
        "operationId": "attachContainer",
        "responses": {
          "200": {
            "description": "placeholder"
          }
        }
      }
    },
    "/commands": {
      "get": {
        "tags": [
          "commands"
        ],
        "operationId": "listCommands",
        "parameters": [
          {
            "type": "string",
            "default": "%",
            "description": "query pattern(MySQL LIKE pattern match)",
            "name": "query",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 0,
            "description": "Unix timestamp(unit: second)",
            "name": "since",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 20,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 0,
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "list the commands",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/command"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/enter": {
      "get": {
        "tags": [
          "container"
        ],
        "operationId": "enterContainer",
        "responses": {
          "200": {
            "description": "placeholder"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "ping"
        ],
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "this server is healthy",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/sessions": {
      "get": {
        "tags": [
          "sessions"
        ],
        "operationId": "listSessions",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "default": 0,
            "description": "Unix timestamp(unit: second)",
            "name": "since",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 20,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 0,
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "list the sessions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/session"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/sessions/{session_id}": {
      "get": {
        "tags": [
          "sessions"
        ],
        "operationId": "getSession",
        "responses": {
          "200": {
            "description": "list the sessions",
            "schema": {
              "$ref": "#/definitions/session"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "name": "session_id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "command": {
      "type": "object",
      "properties": {
        "command_id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "description": "Unix timestamp(unit: second)",
          "type": "integer",
          "format": "int64"
        },
        "session_id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "user": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "session": {
      "type": "object",
      "properties": {
        "app_name": {
          "type": "string"
        },
        "container_id": {
          "type": "string"
        },
        "created_at": {
          "description": "Unix timestamp(unit: second)",
          "type": "integer",
          "format": "int64"
        },
        "ended_at": {
          "description": "Unix timestamp(unit: second)",
          "type": "integer",
          "format": "int64"
        },
        "instance_no": {
          "type": "string"
        },
        "node_ip": {
          "type": "string"
        },
        "proc_name": {
          "type": "string"
        },
        "session_id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "session_type": {
          "type": "string"
        },
        "source_ip": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/vnd.laincloud.entry.v1+json"
  ],
  "produces": [
    "application/vnd.laincloud.entry.v1+json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Entry",
    "version": "3.0.0"
  },
  "paths": {
    "/attach": {
      "get": {
        "tags": [
          "container"
        ],
        "operationId": "attachContainer",
        "responses": {
          "200": {
            "description": "placeholder"
          }
        }
      }
    },
    "/commands": {
      "get": {
        "tags": [
          "commands"
        ],
        "operationId": "listCommands",
        "parameters": [
          {
            "type": "string",
            "default": "%",
            "description": "query pattern(MySQL LIKE pattern match)",
            "name": "query",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 0,
            "description": "Unix timestamp(unit: second)",
            "name": "since",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 20,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 0,
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "list the commands",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/command"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/enter": {
      "get": {
        "tags": [
          "container"
        ],
        "operationId": "enterContainer",
        "responses": {
          "200": {
            "description": "placeholder"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "ping"
        ],
        "operationId": "ping",
        "responses": {
          "200": {
            "description": "this server is healthy",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/sessions": {
      "get": {
        "tags": [
          "sessions"
        ],
        "operationId": "listSessions",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "default": 0,
            "description": "Unix timestamp(unit: second)",
            "name": "since",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 20,
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "int64",
            "default": 0,
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "list the sessions",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/session"
              }
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/sessions/{session_id}": {
      "get": {
        "tags": [
          "sessions"
        ],
        "operationId": "getSession",
        "responses": {
          "200": {
            "description": "list the sessions",
            "schema": {
              "$ref": "#/definitions/session"
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "format": "int64",
          "name": "session_id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "command": {
      "type": "object",
      "properties": {
        "command_id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "content": {
          "type": "string"
        },
        "created_at": {
          "description": "Unix timestamp(unit: second)",
          "type": "integer",
          "format": "int64"
        },
        "session_id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "user": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "session": {
      "type": "object",
      "properties": {
        "app_name": {
          "type": "string"
        },
        "container_id": {
          "type": "string"
        },
        "created_at": {
          "description": "Unix timestamp(unit: second)",
          "type": "integer",
          "format": "int64"
        },
        "ended_at": {
          "description": "Unix timestamp(unit: second)",
          "type": "integer",
          "format": "int64"
        },
        "instance_no": {
          "type": "string"
        },
        "node_ip": {
          "type": "string"
        },
        "proc_name": {
          "type": "string"
        },
        "session_id": {
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "session_type": {
          "type": "string"
        },
        "source_ip": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    }
  }
}`))
}
